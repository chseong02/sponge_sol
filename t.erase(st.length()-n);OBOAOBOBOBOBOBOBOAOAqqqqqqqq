[1mdiff --git a/libsponge/byte_stream.cc b/libsponge/byte_stream.cc[m
[1mindex 7343d2a..642f355 100644[m
[1m--- a/libsponge/byte_stream.cc[m
[1m+++ b/libsponge/byte_stream.cc[m
[36m@@ -17,25 +17,30 @@[m [mByteStream::ByteStream(const size_t capacity){[m
 }[m
 [m
 size_t ByteStream::write(const string &data) {[m
[31m-    DUMMY_CODE(data);[m
[31m-    return {};[m
[32m+[m[32m    size_t appendLength = remaining_capacity()<=data.length()?remaining_capacity():data.length();[m
[32m+[m[32m    _buffer.append(data,0,appendLength);[m
[32m+[m[32m    _writtenLength+=appendLength;[m
[32m+[m[32m    return appendLength;[m
 }[m
 [m
 //! \param[in] len bytes will be copied from the output side of the buffer[m
 string ByteStream::peek_output(const size_t len) const {[m
[31m-    DUMMY_CODE(len);[m
[31m-    return {};[m
[32m+[m[32m    return _buffer.substr(0,len);[m
 }[m
 [m
 //! \param[in] len bytes will be removed from the output side of the buffer[m
[31m-void ByteStream::pop_output(const size_t len) { DUMMY_CODE(len); }[m
[32m+[m[32mvoid ByteStream::pop_output(const size_t len) {[m
[32m+[m[32m    _buffer.erase(0,len);[m
[32m+[m[32m    return;[m
[32m+[m[32m}[m
 [m
 //! Read (i.e., copy and then pop) the next "len" bytes of the stream[m
 //! \param[in] len bytes will be popped and returned[m
 //! \returns a string[m
 std::string ByteStream::read(const size_t len) {[m
[31m-    DUMMY_CODE(len);[m
[31m-    return {};[m
[32m+[m[32m    string str = peek_output(len);[m
[32m+[m[32m    pop_output(len);[m
[32m+[m[32m    return str;[m
 }[m
 [m
 void ByteStream::end_input() {[m
[36m@@ -58,9 +63,13 @@[m [mbool ByteStream::eof() const {[m
     return input_ended() && buffer_empty();[m
 }[m
 [m
[31m-size_t ByteStream::bytes_written() const { return {}; }[m
[32m+[m[32msize_t ByteStream::bytes_written() const {[m
[32m+[m[32m    return _writtenLength;[m
[32m+[m[32m}[m
 [m
[31m-size_t ByteStream::bytes_read() const { return {}; }[m
[32m+[m[32msize_t ByteStream::bytes_read() const {[m
[32m+[m[32m    return _writtenLength - buffer_size();[m
[32m+[m[32m}[m
 [m
 size_t ByteStream::remaining_capacity() const {[m
     return _capacity - buffer_size();[m
[1mdiff --git a/libsponge/byte_stream.hh b/libsponge/byte_stream.hh[m
[1mindex 514d7ce..2aa8f98 100644[m
[1m--- a/libsponge/byte_stream.hh[m
[1m+++ b/libsponge/byte_stream.hh[m
[36m@@ -19,6 +19,7 @@[m [mclass ByteStream {[m
     std::string _buffer=std::string("");[m
     size_t _capacity=0;[m
     bool _isEnded=false;[m
[32m+[m[32m    size_t _writtenLength=0;[m
     bool _error{};  //!< Flag indicating that the stream suffered an error.[m
 [m
   public:[m
